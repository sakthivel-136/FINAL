# -*- coding: utf-8 -*-
"""mic_chat

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Ei3nfgH_cdVVbbmd-_EQurgt7s4rvQs
"""



import gradio as gr
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer
import speech_recognition as sr

# Load and preprocess the dataset
df = pd.read_csv("kcet.csv")  # Make sure the file is in the same folder
df.dropna(inplace=True)

# Encode the answers
le = LabelEncoder()
df["Answer_Label"] = le.fit_transform(df["Answer"])

# Vectorize the questions
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(df["Question"])
y = df["Answer_Label"]

# Train the model
model = LogisticRegression()
model.fit(X, y)

# Function to transcribe audio
def transcribe_audio(audio_path):
    recognizer = sr.Recognizer()
    try:
        with sr.AudioFile(audio_path) as source:
            audio_data = recognizer.record(source)
            return recognizer.recognize_google(audio_data)
    except Exception as e:
        print("Transcription Error:", str(e))
        return ""

# Function to get answer
def get_answer(text_input, audio_input):
    if text_input and text_input.strip():
        question = text_input.strip()
    elif audio_input:
        question = transcribe_audio(audio_input)
        if not question:
            return "‚ùå Sorry, could not understand the audio."
    else:
        return "‚ö†Ô∏è Please provide a question using text or voice."

    try:
        vec = vectorizer.transform([question])
        pred = model.predict(vec)[0]
        answer = le.inverse_transform([pred])[0]
        return f"üü¢ Answer: {answer}"
    except Exception as e:
        print("Prediction Error:", str(e))
        return "‚ö†Ô∏è Something went wrong while finding the answer."

# Gradio Interface
iface = gr.Interface(
    fn=get_answer,
    inputs=[
        gr.Textbox(label="üìù Type your question"),
        gr.Audio(source="microphone", type="filepath", format="wav", label="üé§ Or speak your question")
    ],
    outputs="text",
    title="üéì Kamaraj College FAQ Chatbot",
    description="Ask questions related to Kamaraj College using text or your voice üé§"
)

iface.launch()

